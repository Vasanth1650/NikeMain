Before Coming To Project Quality Matters
1. Security For User Data(Quality 1)(Worked For This 2-3 days)
2. tests code quality and opensource dependency check (junit only 1 method, Snyk test, code quality standard sonar and indication of methods, postman)
3. Bugs Removed Auto Rendering
4. token utilization
5. Logger
6. Database recovery on set


Nike World

1. Global Search Under All Products With Both Capital And Non Capital
2. Email Service
3. Multiple Payment Service Options
4. Chat Bot
5. Filter Items
6. Compatible With More Than 6 Inch Wide Screen
7. Medium Level Of Ios compatible
8. WishList
9. Bag Features
10. Login Token JWT With Redux
11. Order Status Real Time Updates
12. Refund Service
13. Single Page Header Footer Rendering With help of window.location.reload()
14. And .scss used higher than css which provides nested styling and lesser code
15. Deployed In A Compressed State It Would Be Faster In All Server as a(serve)
16. jquery
17. application security under delivery in myorder section increased
18. Live Chat Support Socket.io bidirectional communication
19. Redux Used For Unidirectional data Flow
20. Subscription Enabled (Order Over 15000 There Will Be Discount Accourding To The Plan) 
21. Dedicated Size Chart


Need to Work On
1. Subscription and Reducing Price According TO Subscription Plan(done)
2. Include More Products(done now 30)
3. Customer Service With Real Time Chat(done)
4. Converting Into User Experience Interface With The Help Of Search And Most Viewed Elements(working)
5. Splitting Every Part Into Separate Components To for future user(done)


Tech Used
1. Java(Spring sts)
2. NodeJs(For Payment In Vs Code) And (Socket io)
4. Heavy Process Database Supports Inheritance 0 to more tables
3. POSTgreSQl And MySql (PostgreSql Has More Advantage Over Mysql Where Postgresql is object-relational database and opensource Mysql is relational database so postgresql can perform table inheritance and function overloading But Handling Is easy in mysql Where Hadling is harder in postgresql bcz of the handling easy the mysql is trending postgresql are used by apple skype instagram and spotify and nasa and reddit where these are used in the complex and custom procedures)
4. Application Stores Under Aes Encryption Which Is Advanced Encryption Security
5. Contians Log4j provided by apache
6. Maintained Custom Run Time Exception
7. Maintained Code Quality
8. Making Unwanted Api to Unauthorized and blocking
9. Synk test to find(open dependencies)


Testing

1. PostMan
2. Junit(Mocito)
3. Ui Testing
4. snyk test frontend(Code Zero Vulnerabilties,4 .json open source dependencies vulnerablities Hight Level node-sass and react-simple-chat bot which is transitive dependencies and its open source it might easily vurnerable and 11 medium level from json sass)
5. snyk test 2 high level vulnerabilties from gson google stripe and 1 from code which is csrf
which is cross site request forgery This might allow hacker to execute requests on user's behalf
6. and 3 Medium Level Bcz Not Storing Secret Information In Prevent State
7. Csrf is defaulty enabled when we use @EnableWebSecurity instead of using csrf disable we can
have a cookiecsrftokenrepository to prevent some vulnerable

